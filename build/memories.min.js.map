{"version":3,"sources":["webpack://@wadahkode/memories/./src/dateParser.js","webpack://@wadahkode/memories/./src/defaultFormater.js","webpack://@wadahkode/memories/./src/languages/en_US.js","webpack://@wadahkode/memories/./src/languages/id_ID.js","webpack://@wadahkode/memories/./src/languages/index.js","webpack://@wadahkode/memories/./src/languages|sync|/^/.*$","webpack://@wadahkode/memories/./src/memories.js","webpack://@wadahkode/memories/webpack/bootstrap","webpack://@wadahkode/memories/webpack/runtime/hasOwnProperty shorthand","webpack://@wadahkode/memories/./index.js"],"names":["defaultFormater","detectLanguage","module","exports","date","Date","String","app","Object","hasOwnProperty","message","language","locale","getTime","day","month","year","his","toLocaleString","match","join","birthday","point","Number","output","undefined","y","m","d","w","h","i","s","n","timeAgo","replace","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","dateParser","prop","Array","isDebug","this","length","item","key","name","type","delta","now","datetime","Math","floor","unknown","periode","unPeriode","timelist","split","timeListAgo","prefix","suffix","execute","warning","noProp","isFunction","moment","timeNow","Infinity","HOUR","DAY","WEEK","MONTH","YEAR","second","minute","hour","week","console","warn","process","exit","get","compare","set","value","Boolean","propName","propType","__webpack_module_cache__","moduleId","__webpack_modules__","obj","prototype","call","memories","document","querySelectorAll","forEach","time","getAttribute","options","toString","timeZone","hour12","refresh","setInterval","statusExpired","expired","getExpired","innerHTML","dateTime","status","schedule","getSchedule","clearInterval","async","getMemories","then","response"],"mappings":"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","file":"memories.min.js","sourcesContent":["const defaultFormater = require(\"./defaultFormater\");\r\nconst detectLanguage = require(\"./languages\");\r\n\r\n/**\r\n * Mendapatkan total waktu\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.1.2\r\n * @param {*} date string | object\r\n * @param {Inherit} app inherit\r\n */\r\nconst dateParser = (date = Date | String, app = Object) => {\r\n  if (app.hasOwnProperty(\"language\")) {\r\n    app.message = detectLanguage(app.language);\r\n\r\n    return typeof date === \"string\"\r\n      ? new Date(defaultFormater(date, app.language, app.locale)).getTime()\r\n      : date.getTime();\r\n  } else {\r\n    app.message = detectLanguage(\"id-ID\");\r\n\r\n    return typeof date === \"string\" ? new Date(date).getTime() : date.getTime();\r\n  }\r\n};\r\n\r\nmodule.exports = dateParser;\r\n","/**\r\n * Default Formater\r\n *\r\n * @param {*} date date | string\r\n * @param {*} language string\r\n * @param {*} locale object\r\n */\r\nconst defaultFormater = (\r\n  date = Date | String,\r\n  language = String,\r\n  locale = {}\r\n) => {\r\n  switch (language) {\r\n    case \"id-ID\":\r\n      let [day, month, year, ...his] = date\r\n        .toLocaleString(language, locale)\r\n        .match(/\\d+/g);\r\n\r\n      date = `${day}/${month}/${year}, ${his.join(\":\")}`;\r\n\r\n      return date;\r\n\r\n    case \"en-US\":\r\n    default:\r\n      return date;\r\n  }\r\n};\r\n\r\nmodule.exports = defaultFormater;\r\n","/**\r\n * Output keluaran dalam bahasa inggris\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.1.6\r\n */\r\nmodule.exports = {\r\n  /**\r\n   * Mengatur output untuk hari kelahiran\r\n   *\r\n   * @param {*} point number\r\n   * @param {*} output string | undefined\r\n   */\r\n  birthday: (point = Number, output = String | undefined) => ({\r\n    y: `${point} ${output < 1 ? \"year\" : output}`,\r\n    m: `${point} ${output < 1 ? \"month\" : output}`,\r\n    d: `${point} ${output < 1 ? \"day\" : output}`,\r\n    w: `${point} ${output < 1 ? \"week\" : output}`,\r\n    h: `${point} ${output < 1 ? \"hour\" : output}`,\r\n    i: `${point} ${output < 1 ? \"minute\" : output}`,\r\n    s: `${point} ${output < 1 ? \"second\" : output}`,\r\n    n: `${output < 1 ? \"just born\" : output}`,\r\n  }),\r\n  /**\r\n   * Mengatur output untuk timeAgo\r\n   *\r\n   * @param {*} point number\r\n   * @param {*} output string\r\n   */\r\n  timeAgo: (point = Number, output = String | undefined) => ({\r\n    y: `${point} ${output < 1 ? \"year ago\" : output}`,\r\n    m: `${point} ${output < 1 ? \"month ago\" : output}`,\r\n    d: `${point} ${output < 1 ? \"day ago\" : output}`,\r\n    w: `${point} ${output < 1 ? \"week ago\" : output}`,\r\n    h: `${point} ${output < 1 ? \"hour ago\" : output}`,\r\n    i: `${point} ${output < 1 ? \"minute ago\" : output}`,\r\n    s: `${point} ${output < 1 ? \"second ago\" : output}`,\r\n    n: `${output < 1 ? \"just now\" : output}`,\r\n  }),\r\n};\r\n","/**\r\n * Output keluaran dalam bahasa indonesia\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.1.6\r\n */\r\nmodule.exports = {\r\n  /**\r\n   * Mengatur output untuk hari kelahiran\r\n   *\r\n   * @param {*} point number\r\n   * @param {*} output string | undefined\r\n   */\r\n  birthday: (point = Number, output = String | undefined) => ({\r\n    y: `${point} ${output < 1 ? 'tahun' : output}`,\r\n    m: `${point} ${output < 1 ? 'bulan' : output}`,\r\n    d: `${point} ${output < 1 ? 'hari' : output}`,\r\n    w: `${point} ${output < 1 ? 'minggu' : output}`,\r\n    h: `${point} ${output < 1 ? 'jam' : output}`,\r\n    i: `${point} ${output < 1 ? 'menit' : output}`,\r\n    s: `${point} ${output < 1 ? 'detik' : output}`,\r\n    n: `${output < 1 ? 'baru saja lahir' : output}`,\r\n  }),\r\n  /**\r\n   * Mengatur output untuk timeAgo\r\n   *\r\n   * @param {*} point number\r\n   * @param {*} output string\r\n   */\r\n  timeAgo: (point = Number, output = String | undefined) => ({\r\n    y: `${point} ${output < 1 ? 'tahun yang lalu' : output}`,\r\n    m: `${point} ${output < 1 ? 'bulan yang lalu' : output}`,\r\n    d: `${point} ${output < 1 ? 'hari yang lalu' : output}`,\r\n    w: `${point} ${output < 1 ? 'minggu yang lalu' : output}`,\r\n    h: `${point} ${output < 1 ? 'jam yang lalu' : output}`,\r\n    i: `${point} ${output < 1 ? 'menit yang lalu' : output}`,\r\n    s: `${point} ${output < 1 ? 'detik yang lalu' : output}`,\r\n    n: `${output < 1 ? 'baru saja' : output}`,\r\n  }),\r\n};\r\n","/**\r\n * Mendeteksi bahasa yang digunakan\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.1.6\r\n * @param {*} language string\r\n */\r\nconst detectLanguage = (language = String | \"id-ID\") => {\r\n  language = language.match(/-/g) ? language.replace(/-/g, \"_\") : language;\r\n  return require(`./${language}`);\r\n};\r\n\r\nmodule.exports = detectLanguage;\r\n","var map = {\n\t\"./\": 466,\n\t\"./en_US\": 97,\n\t\"./en_US.js\": 97,\n\t\"./id_ID\": 12,\n\t\"./id_ID.js\": 12,\n\t\"./index\": 466,\n\t\"./index.js\": 466\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 744;","const dateParser = require('./dateParser');\r\n\r\n/**\r\n * Memories\r\n *\r\n * Mengubah waktu menjadi waktu moment\r\n *\r\n * Jika anda adalah seorang pengembang javascript pasti tidak akan asing dengan momentjs,\r\n * disini saya mencoba membuat dengan versi dari Indonesiaku tercinta.\r\n *\r\n * @author wadahkode <mvp.dedefilaras@gmail.com>\r\n * @since version 1.0.0\r\n */\r\nclass Memories {\r\n  /**\r\n   * @param {*} prop Object | Array | undefined\r\n   * @param {*} isDebug boolean\r\n   */\r\n  constructor(prop = Object | Array | undefined, isDebug = false) {\r\n    this.isDebug = isDebug;\r\n    this.prop = prop;\r\n\r\n    if (prop instanceof Array && prop.length >= 1) {\r\n      prop.map((item, key) => (this[key] = item));\r\n    } else if (prop instanceof Object) {\r\n      for (let name in prop) {\r\n        this[name] = prop[name];\r\n      }\r\n    } else {\r\n      //\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Menghitung waktu yang sudah berlalu sejak sekarang\r\n   *\r\n   * @author StefansArya\r\n   * @param  {String|undefined} type \"day\" | \"minute\" | \"second\"\r\n   * @return {Number}      Return ms jika parameter type tidak di isi\r\n   */\r\n  delta(type = String | undefined) {\r\n    let delta = Date.now() - dateParser(this.datetime, this);\r\n    if (type === undefined) return delta;\r\n\r\n    delta /= 1000;\r\n    if (type === 'second') return Math.floor(delta);\r\n    if (type === 'minute') return Math.floor(delta / 60);\r\n    if (type === 'hour') return Math.floor(delta / 3600);\r\n    if (type === 'day') return Math.floor(delta / (3600 * 24));\r\n    if (type === 'month') return Math.floor(delta / (3600 * 24 * 30));\r\n    if (type === 'year') return Math.floor(delta / (3600 * 24 * 30 * 12));\r\n\r\n    throw new Error(\r\n      'Parameter \"type\" hanya menerima undefined atau string seperti (second, minute, hour, day, month). Tetapi malah dapat:' +\r\n        type\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Expired Time\r\n   *\r\n   * Metode yang digunakan untuk menentukan waktu expired.\r\n   *\r\n   * @param {*} unknown String\r\n   */\r\n  expired(unknown = String) {\r\n    let periode = dateParser(this.datetime, this),\r\n      unPeriode = dateParser(new Date(), this),\r\n      timelist = false;\r\n\r\n    unknown = unknown.match(/\\|/g) ? unknown.split(/\\|/g) : unknown;\r\n\r\n    if (typeof unknown !== 'object') {\r\n      return (\r\n        Math.floor(unPeriode / this.timeListAgo(unknown)) >\r\n        Math.floor(periode / this.timeListAgo(unknown))\r\n      );\r\n    } else {\r\n      unknown.map(\r\n        (name) =>\r\n          (timelist =\r\n            Math.floor(unPeriode / this.timeListAgo(name)) >\r\n            Math.floor(periode / this.timeListAgo(name)))\r\n      );\r\n\r\n      return timelist;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mencetak waktu menjadi waktu yang sudah berlalu,\r\n   * jika kedua parameter dikosongkan, maka sistem akan menjalankan pengaturan bawaan.\r\n   *\r\n   * @param {*} prefix string\r\n   * @param {*} suffix object\r\n   */\r\n  timeAgo(prefix = '', suffix = {}) {\r\n    // check property datetime\r\n    if (this.hasOwnProperty('datetime') == false) {\r\n      this.execute(this.isDebug, this.warning.noProp('datetime'));\r\n    }\r\n\r\n    for (let name in this) {\r\n      if (typeof this[name] == 'function') {\r\n        this.execute(this.isDebug, this.warning.isFunction(name));\r\n      }\r\n    }\r\n\r\n    const periode = dateParser(new Date(), this);\r\n    const unPeriode = dateParser(this.datetime, this);\r\n    const moment = (point, name) =>\r\n      this.message[prefix == '' ? 'timeAgo' : prefix](point, suffix[name])[\r\n        name\r\n      ];\r\n    const timeNow = periode > unPeriode && periode - unPeriode;\r\n    const parsed =\r\n      timeNow <= Math.floor(this.timeListAgo('second') * 1.5)\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('second')), 'n')\r\n        : timeNow > this.timeListAgo('second') &&\r\n          timeNow < this.timeListAgo('minute')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('second')), 's')\r\n        : timeNow > this.timeListAgo('second') &&\r\n          timeNow > this.timeListAgo('minute') &&\r\n          timeNow < this.timeListAgo('hour')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('minute')), 'i')\r\n        : timeNow > this.timeListAgo('minute') &&\r\n          timeNow > this.timeListAgo('hour') &&\r\n          timeNow < this.timeListAgo('day')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('hour')), 'h')\r\n        : timeNow > this.timeListAgo('hour') &&\r\n          timeNow > this.timeListAgo('day') &&\r\n          timeNow < this.timeListAgo('week')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('day')), 'd')\r\n        : timeNow > this.timeListAgo('day') &&\r\n          timeNow > this.timeListAgo('week') &&\r\n          timeNow < this.timeListAgo('month')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('week')), 'w')\r\n        : timeNow > this.timeListAgo('week') &&\r\n          timeNow > this.timeListAgo('month') &&\r\n          timeNow < this.timeListAgo('year')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('month')), 'm')\r\n        : timeNow > this.timeListAgo('month') &&\r\n          timeNow > this.timeListAgo('year')\r\n        ? moment(Math.floor(timeNow / this.timeListAgo('year')), 'y')\r\n        : Infinity;\r\n\r\n    return parsed;\r\n  }\r\n\r\n  timeListAgo(name = String) {\r\n    const SECOND = 1000,\r\n      MINUTE = 60 * SECOND,\r\n      HOUR = 60 * MINUTE,\r\n      DAY = HOUR * 24,\r\n      WEEK = DAY * 7,\r\n      MONTH = DAY * 30,\r\n      YEAR = DAY * 365;\r\n\r\n    const timelist = {\r\n      'in second': SECOND,\r\n      second: SECOND,\r\n      'in minute': MINUTE,\r\n      minute: MINUTE,\r\n      'in hour': HOUR,\r\n      hour: HOUR,\r\n      'in day': DAY,\r\n      day: DAY,\r\n      'in week': WEEK,\r\n      week: WEEK,\r\n      'in month': MONTH,\r\n      month: MONTH,\r\n      'in year': YEAR,\r\n      year: YEAR,\r\n    };\r\n\r\n    return timelist[name];\r\n  }\r\n\r\n  /**\r\n   * Untuk memberi pesan kesalahan jika properti datetime tidak dapat ditemukan\r\n   * dan sistem debug telah dinyalakan, atau keluarkan program.\r\n   *\r\n   * @param {*} isDebug boolean\r\n   */\r\n  execute(isDebug = false, message = String | undefined) {\r\n    if (isDebug) {\r\n      console.warn('\\x1b[33m[x] Warning: %s\\x1b[0m', message);\r\n      return process.exit(this);\r\n    }\r\n    return process.exit(this);\r\n  }\r\n\r\n  get get() {}\r\n\r\n  /**\r\n   * Getter\r\n   *\r\n   * Fungsi untuk mendapatkan property\r\n   *\r\n   * @param {String} name string\r\n   */\r\n  get(name = String) {\r\n    return this[name];\r\n  }\r\n\r\n  schedule(prefix = String) {\r\n    let periode = dateParser(this.datetime, this),\r\n      unPeriode = dateParser(new Date(), this),\r\n      compare = false;\r\n\r\n    prefix = prefix.match(/\\|/g) ? prefix.split(/\\|/g) : prefix;\r\n    prefix.map((name) => {\r\n      compare =\r\n        periode > unPeriode || periode === unPeriode\r\n          ? unPeriode > periode - this.timeListAgo(name)\r\n            ? Math.floor(unPeriode / (periode - this.timeListAgo(name)))\r\n            : false\r\n          : unPeriode > periode - this.timeListAgo(name)\r\n          ? Math.floor(unPeriode / (periode - this.timeListAgo(name)))\r\n          : false;\r\n    });\r\n\r\n    return compare >= 1;\r\n  }\r\n\r\n  /**\r\n   * Mengatur property yang akan ditambahkan\r\n   *\r\n   * @param {*} value object | string | boolean | undefined\r\n   */\r\n  set set(value = Date | String | Boolean | undefined) {\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Setter\r\n   *\r\n   * Fungsi untuk mengatur property\r\n   *\r\n   * @param {String|undefined} name string | undefined\r\n   * @param {String|Object} value object | string | boolean | undefined\r\n   */\r\n  set(\r\n    name = String | undefined,\r\n    value = Object | Date | String | Boolean | undefined\r\n  ) {\r\n    this.warning = {\r\n      noProp: (propName) =>\r\n        `Parameter [${propName}] diperlukan, kamu dapat mengaturnya dengan menggunakan metode memories.set('${propName}', value)\\n`,\r\n      isFunction: (propName) =>\r\n        `Parameter [${propName}] dengan tipe [Function] tidak dapat diterima!\\n`,\r\n      propType: (propName) =>\r\n        `Parameter [${propName}] dengan tipe [${typeof propName}] tidak dapat diterima!\\n`,\r\n    };\r\n    return (this[name] = value);\r\n  }\r\n}\r\n\r\nmodule.exports = Memories;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const memories = require('./src/memories');\r\nconst article = document.querySelectorAll('time');\r\n\r\narticle.forEach((time) => {\r\n  const prefix = time.getAttribute('prefix');\r\n  const options = {\r\n    datetime: time.getAttribute('datetime').toString().replace(',', ''),\r\n    language: 'id-ID',\r\n    locale: {\r\n      timeZone: 'Asia/Jakarta',\r\n      hour12: false,\r\n    },\r\n  };\r\n\r\n  let refresh = setInterval(() => {\r\n    if (prefix == 'expired') {\r\n      let statusExpired = getExpired(options);\r\n      if (statusExpired) {\r\n        return (time.innerHTML = 'expired: <b>sudah kadaluarsa</b>');\r\n      } else {\r\n        return (time.innerHTML = 'expired: <b>' + time.dateTime + '</b>');\r\n      }\r\n    } else if (prefix == 'schedule') {\r\n      let status = getSchedule(options);\r\n      if (status == undefined) clearInterval(refresh);\r\n      if (status) {\r\n        return (time.innerHTML = time.dateTime + '<b> (sudah dimulai)</b>');\r\n      } else {\r\n        return (time.innerHTML = time.dateTime + '<b> (belum dimulai)</b>');\r\n      }\r\n    } else {\r\n      return getMemories(options, prefix).then((response) => {\r\n        if (response) {\r\n          time.innerHTML = response;\r\n        }\r\n      });\r\n    }\r\n  }, 10);\r\n});\r\n\r\n// Mengatur waktu standar menjadi waktu moment\r\nasync function getMemories(options = {}, prefix) {\r\n  const moment = new memories();\r\n  moment.set('isDebug', false);\r\n  moment.set('datetime', options.datetime);\r\n  moment.set('language', options.language);\r\n  moment.set('locale', options.locale);\r\n\r\n  if (prefix != null) {\r\n    return await moment.timeAgo(prefix, {\r\n      y: 'tahun',\r\n      m: 'bulan',\r\n      d: 'hari',\r\n      w: 'minggu',\r\n      h: 'jam',\r\n      i: 'menit',\r\n      s: 'detik',\r\n      n: 'baru saja',\r\n    });\r\n  }\r\n  return await moment.timeAgo();\r\n}\r\n\r\n// Expired\r\nfunction getExpired(options = {}) {\r\n  const moment = new memories(options);\r\n  moment.set('isDebug', false);\r\n  moment.set('datetime', options.datetime);\r\n  moment.set('language', options.language);\r\n  moment.set('locale', options.locale);\r\n\r\n  return moment.expired('in day');\r\n}\r\n\r\n// Schedule\r\nfunction getSchedule(options = {}) {\r\n  const moment = new memories(options);\r\n  moment.set('isDebug', false);\r\n  moment.set('datetime', options.datetime);\r\n  moment.set('language', options.language);\r\n  moment.set('locale', options.locale);\r\n\r\n  return moment.schedule('day|hour|miute|second');\r\n}\r\n"],"sourceRoot":""}